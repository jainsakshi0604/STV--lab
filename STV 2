Name of the Experiment: Test cases for banking applications 
AIM: Banking applications are considered to be one of the most complex applications in today’s software development and testing industry. What makes Banking application so complex? 
What approach should be followed in order to test the complex workflows involved? In this article we will be highlighting different stages and techniques involved in testing Banking applications. The characteristics of a Banking application are as follows: 
 Multi tier functionality to support thousands of concurrent user sessions 
 Large scale Integration, typically a banking application integrates with numerous other applications such as
 Bill Pay utility and trading accounts 
 Complex Business workflows 
 Real Time and Batch processing 
 High rate of Transactions per seconds 
 Secure Transactions 
Robust Reporting section to keep track of day to day transactions 
Strong Auditing to troubleshoot customer issues 
Massive storage system Disaster Management. 
The above listed ten points are the most important characteristics of a Banking application. Banking applications have multiple tiers involved in performing an operation. For Example, a banking application may have: 
1. Web Server to interact with end users via Browser 
2. Middle Tier to validate the input and output for web server 
3. Data Base to store data and procedures 
4. Transaction Processor which could be a large capacity Mainframe or any other Legacy system to carry out Trillions of transactions per second. 
If we talk about testing banking applications it requires an end to end testing methodology involving multiple software testing techniques to ensure:  Total coverage of all banking workflows and Business Requirements  Functional aspect of the application  Security aspect of the application  Data Integrity  Concurrency 
 User Experience Typical stages involved in testing Banking Applications are shown in below workflow which We will be discussing individually.

Banking Application Testing Workflow






	








1) Requirement Gathering: 
Requirement gathering phase involves documentation of requirements either as Functional Specifications or Use Cases. Requirements are gathered as per customer needs and documented by Banking Experts or Business Analyst. To write requirements on more than one subject experts are involved as banking itself has multiple sub domains and one full fledge banking application will be the integration of all. For Example: A banking application may have separate modules for Transfers, Credit Cards, Reports, Loan Accounts, Bill Payments, and Trading Etc. 
2) Requirement Review: 
The deliverable of Requirement Gathering is reviewed by all the stakeholders such as QA Engineers, Development leads and Peer Business Analysts. They cross check that neither existing business workflows nor new workflows are violated. 
3) Business Scenario Preparations: 
In this stage QA Engineers derive Business Scenarios from the requirement documents (Functions Specs or Use Cases); Business Scenarios are derived in such a way that all Business Requirements are covered. Business Scenarios are high level scenarios without any detailed steps, further these Business Scenarios are reviewed by Business Analyst to ensure all of Business Requirements are met and its easier for BAs to review high level scenarios than reviewing low level detailed Test Cases. 
4) Functional Testing: 
In this stage functional testing is performed and the usual software testing activities are performed such as: 
Test Case Preparation: In this stage Test Cases are derived from Business Scenarios, one Business Scenario leads to several positive test cases and negative test cases. Generally tools used during this stage are Microsoft Excel, Test Director or Quality Center. 
Test Case Review: Reviews by peer QA Engineers 
Test Case Execution: Test Case Execution could be either manual or automatic involving tools like QC, QTP or any other. 
5) Database Testing: 
Banking Application involves complex transaction which are performed both at UI level and 
Database level, Therefore Database testing is as important as functional testing. Database in itself is an entirely separate layer hence it is carried out by database specialists and it uses techniques like
 Data loading 
 Database Migration 
 Testing DB Schema and Data types 
 Rules Testing 
 Testing Stored Procedures and Functions 
 
 Testing Triggers 
 Data Integrity 
6) Security Testing: 
Security Testing is usually the last stage in the testing cycle as completing functional and non functional are entry criteria to commence Security testing. Security testing is one of the major stages in the entire Application testing cycle as this stage ensures that application complies with Federal and Industry standards. Security testing cycle makes sure the application does not have any web vulnerability which may expose sensitive data to an intruder or an attacker and complies with standards like OWASP. 
In this stage the major task involves in the whole application scan which is carried out using tools like IBM Appscan or HP WebInspect (2 Most popular tools). Once the Scan is complete the Scan Report is published out of which False Positives are filtered out and rest of the vulnerability are reported to Development team for fixing depending on the Severity. 
Other Manual tools for Security Testing used are: Paros Proxy, Http Watch, Burp Suite, Fortify tools Etc. 
Apart from the above stages there might be different stages involved like Integration Testing and Performance Testing. In today’s scenario majority of Banking Projects are using: Agile/Scrum, RUP and Continuous Integration methodologies, and Tools packages like Microsoft’s VSTS and Rational Tools. 
As we mentioned RUP above, RUP stands for Rational Unified Process, which is an iterative software development methodology introduced by IBM which comprises of four phases in which development and testing activities are carried out. 
Four phases are: 
i)Inception 
ii)Collaboration 
iii) Construction and 
iv) Transition 
RUP widely involves IBM Rational tools. 
In this article we discussed how complex a Banking application could be and what are the typical phases involved in testing the application. Apart from that we also discussed current trends followed by IT industries including software development methodologies and tools. 
 
